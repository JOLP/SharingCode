"""
Django settings for hackIDE_project project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os


# Added 2016/02/22
# 로그인 하지 않은 유저가 로그인 할 수 있도록 로그인 페이지로 이동
import django.contrib.auth
django.contrib.auth.LOGIN_URL = '/login'

LOGIN_URL = '/login/'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+h*i@$52+w(_e#etvzgnkjq!q0ajz1qpgs-y9%89x4w3nlct=m'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = (os.environ.get('HACKIDE_DEBUG') != None)
#DEBUG = (os.environ.get('HACKIDE_DEBUG') or "").lower() == "true"
DEBUG = True

ALLOWED_HOSTS = [] if not DEBUG else ['*']
#ALLOWED_HOSTS = ['testclient.yunhongseog.com'] if not DEBUG else ['*']

# To allow the cross site request over the app
CORS_ORIGIN_ALLOW_ALL = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # hackIDE.apps.HackideConfig를 호출함. hackIDE만 호출해도 되나 이 앱에서는 apps라는 파일을 만들고 name = 'hackIDE' 를 호출함  
    'hackIDE.apps.HackideConfig',

    # Added 2016/05/14
    # 'login',
    'home',
    'alpha',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#URL 이 어디있는지 알려주는 값 - hackIDE_project 폴더안에 urls 파일을 불러온다.
ROOT_URLCONF = 'hackIDE_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',


        # Added 2016/02/22
        'DIRS': [
            'os.path.join(os.path.dirname(__file__), templates)',
            ],
        # 기존 DIRS 설정
        # 'DIRS : [],


        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hackIDE_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases


# 기존 Database 설정

DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.sqlite3',
		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
   }
}

# Added 2016/02/22
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
#         'NAME': BASE_DIR + '/loginapp.sqlite',  # Or path to database file if using sqlite3.
#         # The following settings are not used with sqlit#         
#           'USER': '',
#         'PASSWORD': '',
#         'HOST': '',   # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
#         'PORT': '',   # Set to empty string for default.
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = None
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


BASE_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = 'staticfiles'


STATICFILES_DIRS = (
    os.path.join(BASE_DIR, '../hackIDE/static'),
    os.path.join(BASE_DIR, 'static'),
)

STATIC_URL = '/static/'

LOGIN_URL = '/login/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)


# # Simplified static file serving.
# # https://warehouse.python.org/project/whitenoise/
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
